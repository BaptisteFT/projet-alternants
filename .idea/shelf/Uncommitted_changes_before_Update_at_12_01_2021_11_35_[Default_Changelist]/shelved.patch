Index: templates/contract/pdfViewer.html.twig
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\r\n<html lang=\"fr\">\r\n    <head>\r\n        <meta charset=\"utf-8\" />\r\n        <script src=\"https://unpkg.com/pdf-lib\"></script>\r\n        <title>Projet Alternant</title>\r\n    </head>\r\n\r\n    <body>\r\n    {% block body %}\r\n    <embed id=pdf src=\"\" width=\"100%\" height=\"800px\" />\r\n    {% endblock %}\r\n    </body>\r\n\r\n    <script>\r\n        fillPdfForm();\r\n\r\n        async function fillPdfForm(){\r\n            const url = \"{{ absolute_url(asset('pdf/pre-convention.pdf')) }}\";\r\n            const formPdfBytes = await fetch(url).then(res => res.arrayBuffer())\r\n            const pdfDoc = await PDFLib.PDFDocument.load(formPdfBytes);\r\n            const form = pdfDoc.getForm()\r\n\r\n            /*\r\n            const fields = form.getFields();\r\n            fields.forEach(field => {\r\n                const type = field.constructor.name\r\n                const name = field.getName()\r\n                console.log(`${name}`)\r\n            })\r\n            */\r\n\r\n            const repCivility = '{{ contract.representativeCivility }}';\r\n            if (repCivility === 'false'){\r\n                const repCivCheckBox = form.getCheckBox('Case à cocher 12')\r\n                repCivCheckBox.check()\r\n            }\r\n            else{\r\n                const repCivCheckBox = form.getCheckBox('Case à cocher 13')\r\n                repCivCheckBox.check()\r\n            }\r\n\r\n            const tutorCivility = '{{ contract.tutorCivility }}';\r\n            if (tutorCivility === 'false'){\r\n                const tutorCivCheckBox = form.getCheckBox('Case à cocher 18')\r\n                tutorCivCheckBox.check()\r\n            }\r\n            else{\r\n                const tutorCivCheckBox = form.getCheckBox('Case à cocher 19')\r\n                tutorCivCheckBox.check()\r\n            }\r\n\r\n            const contracType = '{{ contract.contractType }}';\r\n            if (contracType === 'APR'){\r\n                const contractTypeCheckBox = form.getCheckBox('Case à cocher 7')\r\n                contractTypeCheckBox.check()\r\n            }\r\n            else if (contracType === 'PRO'){\r\n                const contractTypeCheckBox = form.getCheckBox('Case à cocher 9')\r\n                contractTypeCheckBox.check()\r\n            }\r\n            else if (contractType === 'AUT'){\r\n                const contractTypeCheckBox = form.getCheckBox('Case à cocher 10')\r\n                contractTypeCheckBox.check()\r\n            }\r\n\r\n            const socialReason = form.getTextField('Parcours 2')\r\n            const siretNumber = form.getTextField('Mention 2')\r\n            const activity = form.getTextField('Parcours 3')\r\n            const locationStreet = form.getTextField('Parcours 4')\r\n            const locationCity = form.getTextField('Mention 3')\r\n            const postalCode = form.getTextField('Parcours 5')\r\n            const phoneNumber = form.getTextField('Parcours 6')\r\n            const contractEmail = form.getTextField('Parcours 7')\r\n            const representativeFirstName = form.getTextField('Parcours 8')\r\n            const representativeLastName = form.getTextField('Mention 4')\r\n            const representativeRole = form.getTextField('Parcours 9')\r\n            const representativeEmail = form.getTextField('Parcours 10')\r\n            const otherSocialReason = form.getTextField('Parcours 11')\r\n            const otherLocationStreet = form.getTextField('Mention 5')\r\n            const otherLocationCity = form.getTextField('Parcours 12')\r\n            const otherPostalCode = form.getTextField('Parcours 13')\r\n            const otherPhoneNumber = form.getTextField('Parcours 14')\r\n            const workerRole = form.getTextField('Parcours 16')\r\n            const startDate = form.getTextField('Mention 7')\r\n            const endDate = form.getTextField('Parcours 17')\r\n            const tutorFirstName = form.getTextField('Parcours 24')\r\n            const tutorLastName = form.getTextField('Mention 10')\r\n            const tutorRole = form.getTextField('Parcours 25')\r\n            const tutorEmail = form.getTextField('Parcours 27')\r\n            const tutorPhoneNumber = form.getTextField('Parcours 26')\r\n\r\n            socialReason.setText('{{ contract.socialReason }}')\r\n            siretNumber.setText('{{ contract.siretNumber }}')\r\n            activity.setText('{{ contract.activity }}')\r\n            locationStreet.setText('{{ contract.locationStreet }}')\r\n            postalCode.setText('{{ contract.postalCode }}')\r\n            phoneNumber.setText('{{ contract.phoneNumber }}')\r\n            locationCity.setText('{{ contract.locationCity }}')\r\n            contractEmail.setText('{{ contract.contractEmail }}')\r\n            representativeFirstName.setText('{{ contract.representativeFirstName }}')\r\n            representativeLastName.setText('{{ contract.representativeLastName }}')\r\n            representativeRole.setText('{{ contract.representativeRole }}')\r\n            representativeEmail.setText('{{ contract.representativeEmail }}')\r\n            otherSocialReason.setText('{{ contract.otherSocialReason }}')\r\n            otherLocationStreet.setText('{{ contract.otherLocationStreet }}')\r\n            otherLocationCity.setText('{{ contract.otherLocationCity }}')\r\n            otherPostalCode.setText('{{ contract.otherPostalCode }}')\r\n            otherPhoneNumber.setText('{{ contract.otherPhoneNumber }}')\r\n            workerRole.setText('{{ contract.workerRole }}')\r\n            startDate.setText('{{ contract.contractStartDate|date(\"m/d/Y\") }}')\r\n            endDate.setText('{{ contract.contractEndDate|date(\"m/d/Y\") }}')\r\n            tutorFirstName.setText('{{ contract.tutorFirstName }}')\r\n            tutorLastName.setText('{{ contract.tutorLastName }}')\r\n            tutorRole.setText('{{ contract.tutorRole }}')\r\n            tutorEmail.setText('{{ contract.tutorEmail }}')\r\n            tutorPhoneNumber.setText('{{ contract.tutorPhoneNumber }}')\r\n\r\n            const pdfDataUri = await pdfDoc.saveAsBase64({ dataUri: true });\r\n            document.getElementById('pdf').src = pdfDataUri;\r\n        }\r\n    </script>\r\n</html>\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- templates/contract/pdfViewer.html.twig	(revision e48948b648fa668e19e303e68c02b55c6797424c)
+++ templates/contract/pdfViewer.html.twig	(date 1610447701792)
@@ -118,6 +118,7 @@
 
             const pdfDataUri = await pdfDoc.saveAsBase64({ dataUri: true });
             document.getElementById('pdf').src = pdfDataUri;
+
         }
     </script>
 </html>
Index: src/Entity/User.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\r\n\r\nnamespace App\\Entity;\r\n\r\nuse App\\Repository\\UserRepository;\r\nuse Doctrine\\Common\\Collections\\ArrayCollection;\r\nuse Doctrine\\Common\\Collections\\Collection;\r\nuse Doctrine\\ORM\\Mapping as ORM;\r\nuse Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity;\r\nuse Symfony\\Component\\Security\\Core\\User\\UserInterface;\r\n\r\n/**\r\n * @ORM\\Entity(repositoryClass=UserRepository::class)\r\n * @UniqueEntity(fields={\"email\"}, message=\"There is already an account with this email\")\r\n */\r\nclass User implements UserInterface\r\n{\r\n    /**\r\n     * @ORM\\Id\r\n     * @ORM\\GeneratedValue\r\n     * @ORM\\Column(type=\"integer\")\r\n     */\r\n    private $id;\r\n\r\n    /**\r\n     * @ORM\\Column(type=\"string\", length=180, unique=true)\r\n     */\r\n    private $email;\r\n\r\n    /**\r\n     * @ORM\\Column(type=\"string\", length=180)\r\n     */\r\n    private $firstName;\r\n\r\n    /**\r\n     * @ORM\\Column(type=\"string\", length=180)\r\n     */\r\n    private $lastName;\r\n\r\n    /**\r\n     * @ORM\\Column(type=\"json\")\r\n     */\r\n    private $roles = [];\r\n\r\n    /**\r\n     * @var string The hashed password\r\n     * @ORM\\Column(type=\"string\")\r\n     */\r\n    private $password;\r\n\r\n    /**\r\n     * @ORM\\OneToOne(targetEntity=ApiToken::class, mappedBy=\"user\", orphanRemoval=true)\r\n     */\r\n    private $apiToken;\r\n\r\n    /**\r\n     * @ORM\\Column(type=\"boolean\")\r\n     */\r\n    private $isActive;\r\n\r\n    /**\r\n     * @ORM\\OneToOne(targetEntity=Contract::class, mappedBy=\"user\", orphanRemoval=true)\r\n     */\r\n    private $contract;\r\n\r\n    /**\r\n     * @ORM\\Column(type=\"string\", length=16, nullable=true)\r\n     */\r\n    private $status;\r\n\r\n    /**\r\n     * @return mixed\r\n     */\r\n    public function getIsActive()\r\n    {\r\n        return $this->isActive;\r\n    }\r\n\r\n    /**\r\n     * @param mixed $isActive\r\n     */\r\n    public function setIsActive($isActive): void\r\n    {\r\n        $this->isActive = $isActive;\r\n    }\r\n\r\n\r\n\r\n\r\n    public function __construct()\r\n    {\r\n        $this->apiTokens = new ArrayCollection();\r\n    }\r\n\r\n    public function getId(): ?int\r\n    {\r\n        return $this->id;\r\n    }\r\n\r\n    /**\r\n     * @return mixed\r\n     */\r\n    public function getStatus()\r\n    {\r\n        return $this->status;\r\n    }\r\n\r\n    /**\r\n     * @param mixed $status\r\n     */\r\n    public function setStatus($status): void\r\n    {\r\n        $this->status = $status;\r\n    }\r\n\r\n\r\n\r\n    public function getEmail(): ?string\r\n    {\r\n        return $this->email;\r\n    }\r\n\r\n    public function setEmail(string $email): self\r\n    {\r\n        $this->email = $email;\r\n\r\n        return $this;\r\n    }\r\n\r\n    /**\r\n     * A visual identifier that represents this user.\r\n     *\r\n     * @see UserInterface\r\n     */\r\n    public function getUsername(): string\r\n    {\r\n        return (string) $this->email;\r\n    }\r\n\r\n    /**\r\n     * @see UserInterface\r\n     */\r\n    public function getFirstName()\r\n    {\r\n        return $this->firstName;\r\n    }\r\n\r\n    /**\r\n     * @see UserInterface\r\n     */\r\n    public function setFirstName($firstName): void\r\n    {\r\n        $this->firstName = $firstName;\r\n    }\r\n\r\n    /**\r\n     * @see UserInterface\r\n     */\r\n    public function getLastName()\r\n    {\r\n        return $this->lastName;\r\n    }\r\n\r\n    /**\r\n     * @see UserInterface\r\n     */\r\n    public function setLastName($lastName): void\r\n    {\r\n        $this->lastName = $lastName;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    /**\r\n     * @see UserInterface\r\n     */\r\n    public function getRoles(): array\r\n    {\r\n        $roles = $this->roles;\r\n        // guarantee every user at least has ROLE_USER\r\n        $roles[] = 'ROLE_USER';\r\n\r\n        return array_unique($roles);\r\n    }\r\n\r\n    public function setRoles(array $roles): self\r\n    {\r\n        $this->roles = $roles;\r\n\r\n        return $this;\r\n    }\r\n\r\n    /**\r\n     * @see UserInterface\r\n     */\r\n    public function getPassword(): string\r\n    {\r\n        return (string) $this->password;\r\n    }\r\n\r\n    public function setPassword(string $password): self\r\n    {\r\n        $this->password = $password;\r\n\r\n        return $this;\r\n    }\r\n\r\n    /**\r\n     * @see UserInterface\r\n     */\r\n    public function getSalt()\r\n    {\r\n        // not needed when using the \"bcrypt\" algorithm in security.yaml\r\n    }\r\n\r\n    /**\r\n     * @see UserInterface\r\n     */\r\n    public function eraseCredentials()\r\n    {\r\n        // If you store any temporary, sensitive data on the user, clear it here\r\n        // $this->plainPassword = null;\r\n    }\r\n\r\n    public function getToken()\r\n    {\r\n        return $this->apiToken;\r\n    }\r\n\r\n    public function setToken(ApiToken $apiToken): self\r\n    {\r\n        $this->apiToken = $apiToken;\r\n\r\n        return $this;\r\n    }\r\n\r\n    /**\r\n     * @return mixed\r\n     */\r\n    public function getContract()\r\n    {\r\n        return $this->contract;\r\n    }\r\n\r\n    /**\r\n     * @param mixed $contract\r\n     */\r\n    public function setContract($contract): void\r\n    {\r\n        $this->contract = $contract;\r\n    }\r\n\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Entity/User.php	(revision e48948b648fa668e19e303e68c02b55c6797424c)
+++ src/Entity/User.php	(date 1609862189556)
@@ -185,6 +185,7 @@
         return array_unique($roles);
     }
 
+
     public function setRoles(array $roles): self
     {
         $this->roles = $roles;
Index: templates/main/admin.html.twig
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\r\n<html lang=\"fr\">\r\n<head>\r\n    <meta charset=\"utf-8\" />\r\n    <script src=\"https://unpkg.com/pdf-lib\"></script>\r\n    <title>Projet Alternant</title>\r\n</head>\r\n<body>\r\n{% block body %}\r\n    <h1>Administration de l'application</h1>\r\n\r\n    <div>\r\n        <h2>Utilisateurs de l'application</h2>\r\n        <table>\r\n            <tr>\r\n                <th>Adresse mail</th>\r\n                <th>Nom</th>\r\n                <th>Prénom</th>\r\n                <th>Statut</th>\r\n                <th>Activé</th>\r\n                <th>Actions</th>\r\n            </tr>\r\n            {% for user in users %}\r\n                <tr>\r\n                    <td>{{ user.userName }}</td>\r\n                    <td>{{ user.lastName }}</td>\r\n                    <td>{{ user.firstName }}</td>\r\n                    <td>{{ user.status }}</td>\r\n                    {% if user.isActive %}\r\n                        <td>Oui</td>\r\n                    {% else %}\r\n                        <td>Non</td>\r\n                    {% endif %}\r\n                    <td>\r\n                        <a href=\"{{ path('update_user', {'userId': user.getId()}) }}\"> Modifier</a>\r\n                        <a href=\"{{ path('delete_user', {'userId': user.getId()}) }}\"> Supprimer</a>\r\n                    </td>\r\n                </tr>\r\n            {% endfor %}\r\n        </table>\r\n    </div>\r\n\r\n{% endblock %}\r\n</body>\r\n</html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- templates/main/admin.html.twig	(revision e48948b648fa668e19e303e68c02b55c6797424c)
+++ templates/main/admin.html.twig	(date 1609862784761)
@@ -7,6 +7,19 @@
 </head>
 <body>
 {% block body %}
+
+    <nav>
+        {% if is_granted('ROLE_ADMIN') %}
+            <a href="{{ path('create_user') }}"> Ajouter un utilisateur</a>
+            <a href="{{ path('admin_panel') }}"> Administration de l'application</a>
+            <a href="{{ path('excel_parse') }}"> Ajout des étudiants automatique</a>
+
+        {% endif %}
+        <a href="{{ path('app_index_index') }}"> Index</a>
+        <a href="{{ path('my_profil', {userId: app.user.id}) }}">Mon profile</a>
+        <a href="{{ path('app_logout') }}"> Déconnexion</a>
+    </nav>
+
     <h1>Administration de l'application</h1>
 
     <div>
@@ -18,6 +31,7 @@
                 <th>Prénom</th>
                 <th>Statut</th>
                 <th>Activé</th>
+                <th>Roles</th>
                 <th>Actions</th>
             </tr>
             {% for user in users %}
@@ -32,6 +46,11 @@
                         <td>Non</td>
                     {% endif %}
                     <td>
+                        {% for role in user.roles %}
+                        {{ role }}
+                        {% endfor %}
+                    </td>
+                    <td>
                         <a href="{{ path('update_user', {'userId': user.getId()}) }}"> Modifier</a>
                         <a href="{{ path('delete_user', {'userId': user.getId()}) }}"> Supprimer</a>
                     </td>
@@ -39,6 +58,11 @@
             {% endfor %}
         </table>
     </div>
+
+    <div>
+        <h2>Adresse mail de l'administration USMB</h2>
+        
+    </div>
 
 {% endblock %}
 </body>
Index: templates/main/profile.html.twig
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\r\n<html lang=\"fr\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <title>Projet Alternant</title>\r\n</head>\r\n<body>\r\n{% block body %}\r\n\r\n    <nav>\r\n        {% if is_granted('ROLE_ADMIN') %}\r\n            <a href=\"{{ path('create_user') }}\"> Ajouter un utilisateur</a>\r\n\r\n        {% endif %}\r\n        <a href=\"{{ path('my_profil', {userId: app.user.id}) }}\">Mon profile</a>\r\n        <a href=\"{{ path('app_logout') }}\"> Déconnexion</a>\r\n    </nav>\r\n\r\n    <h2>Informations de l'utilisateur</h2>\r\n\r\n    <ul>\r\n        <li>Nom :  {{ user.lastName }}</li>\r\n        <li>Prénom :  {{ user.firstName }}</li>\r\n        <li>Email :  {{ user.email }}</li>\r\n    </ul>\r\n\r\n    {% if is_granted('ROLE_STUDENT') %}\r\n        {% if token is not null %}\r\n            <h2>lien de connexion actif :</h2>\r\n            <p>Url : {{ token.generateUrl }}</p> <br>\r\n            <p>Date d'expiration :  {{ token.expireDate|date(\"m/d/Y h:m\") }}</p> <br>\r\n            <p>vous pouvez regénérer un lien en appuyant sur le button ci-dessous</p>\r\n            <a href=\"{{ path('create_token', {userId: user.id}) }}\"> Générer un lien de connexion</a>\r\n        {% else %}\r\n            <p>Aucun lien n'est actuellement générer, vous pouvez en générer en appuyant sur le button ci-dessous</p>\r\n            <a href=\"{{ path('create_token', {userId: user.id}) }}\"> Générer un lien de connexion</a>\r\n        {% endif %}\r\n    {% endif %}\r\n\r\n{% endblock %}\r\n</body>\r\n</html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- templates/main/profile.html.twig	(revision e48948b648fa668e19e303e68c02b55c6797424c)
+++ templates/main/profile.html.twig	(date 1609860760802)
@@ -10,9 +10,11 @@
     <nav>
         {% if is_granted('ROLE_ADMIN') %}
             <a href="{{ path('create_user') }}"> Ajouter un utilisateur</a>
+            <a href="{{ path('admin_panel') }}"> Administration de l'application</a>
+            <a href="{{ path('excel_parse') }}"> Ajout des étudiants automatique</a>
 
         {% endif %}
-        <a href="{{ path('my_profil', {userId: app.user.id}) }}">Mon profile</a>
+        <a href="{{ path('app_index_index') }}"> Index</a>
         <a href="{{ path('app_logout') }}"> Déconnexion</a>
     </nav>
 
Index: src/Entity/Contract.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\r\n\r\nnamespace App\\Entity;\r\n\r\nuse App\\Repository\\ContractRepository;\r\nuse Doctrine\\ORM\\Mapping as ORM;\r\n\r\n/**\r\n * @ORM\\Entity(repositoryClass=ContractRepository::class)\r\n */\r\nclass Contract\r\n{\r\n    /**\r\n     * @ORM\\Id\r\n     * @ORM\\GeneratedValue\r\n     * @ORM\\Column(type=\"integer\")\r\n     */\r\n    private $id;\r\n\r\n    /**\r\n     * @ORM\\OneToOne(targetEntity=User::class, inversedBy=\"contract\")\r\n     * @ORM\\JoinColumn(nullable=false)\r\n     */\r\n    private $user;\r\n\r\n    /**\r\n     * @ORM\\Column(type=\"string\", length=64)\r\n     */\r\n    private $socialReason;\r\n\r\n    /**\r\n     * @ORM\\Column(type=\"string\", length=64)\r\n     */\r\n    private $siretNumber;\r\n\r\n    /**\r\n     * @ORM\\Column(type=\"string\", length=64)\r\n     */\r\n    private $activity;\r\n\r\n    /**\r\n     * @ORM\\Column(type=\"string\", length=64)\r\n     */\r\n    private $locationStreet;\r\n\r\n    /**\r\n     * @ORM\\Column(type=\"string\", length=64)\r\n     */\r\n    private $locationCity;\r\n\r\n    /**\r\n     * @ORM\\Column(type=\"string\", length=10)\r\n     */\r\n    private $postalCode;\r\n\r\n    /**\r\n     * @ORM\\Column(type=\"string\", length=16)\r\n     */\r\n    private $phoneNumber;\r\n\r\n    /**\r\n     * @ORM\\Column(type=\"string\", length=64, nullable=true)\r\n     */\r\n    private $contractEmail;\r\n\r\n    /**\r\n     * @ORM\\Column(type=\"boolean\")\r\n     */\r\n    private $representativeCivility;\r\n\r\n    /**\r\n     * @ORM\\Column(type=\"string\", length=64)\r\n     */\r\n    private $representativeFirstName;\r\n\r\n    /**\r\n     * @ORM\\Column(type=\"string\", length=64)\r\n     */\r\n    private $representativeLastName;\r\n\r\n    /**\r\n     * @ORM\\Column(type=\"string\", length=64)\r\n     */\r\n    private $representativeRole;\r\n\r\n    /**\r\n     * @ORM\\Column(type=\"string\", length=64)\r\n     */\r\n    private $representativeEmail;\r\n\r\n    /**\r\n     * @ORM\\Column(type=\"string\", length=64, nullable=true)\r\n     */\r\n    private $otherSocialReason;\r\n\r\n    /**\r\n     * @ORM\\Column(type=\"string\", length=64, nullable=true)\r\n     */\r\n    private $otherLocationStreet;\r\n\r\n    /**\r\n     * @ORM\\Column(type=\"string\", length=64, nullable=true)\r\n     */\r\n    private $otherLocationCity;\r\n\r\n    /**\r\n     * @ORM\\Column(type=\"string\", length=10, nullable=true)\r\n     */\r\n    private $otherPostalCode;\r\n\r\n    /**\r\n     * @ORM\\Column(type=\"string\", length=16, nullable=true)\r\n     */\r\n    private $otherPhoneNumber;\r\n\r\n    /**\r\n     * @ORM\\Column(type=\"string\", length=64)\r\n     */\r\n    private $workerRole;\r\n\r\n    /**\r\n     * @ORM\\Column(type=\"string\", length=64)\r\n     */\r\n    private $contractType;\r\n\r\n    /**\r\n     * @ORM\\Column(type=\"datetime\")\r\n     */\r\n    private $contractStartDate;\r\n\r\n    /**\r\n     * @ORM\\Column(type=\"datetime\")\r\n     */\r\n    private $contractEndDate;\r\n\r\n    /**\r\n     * @ORM\\Column(type=\"boolean\")\r\n     */\r\n    private $tutorCivility;\r\n\r\n    /**\r\n     * @ORM\\Column(type=\"string\", length=64)\r\n     */\r\n    private $tutorFirstName;\r\n\r\n    /**\r\n     * @ORM\\Column(type=\"string\", length=64)\r\n     */\r\n    private $tutorLastName;\r\n\r\n    /**\r\n     * @ORM\\Column(type=\"string\", length=64)\r\n     */\r\n    private $tutorRole;\r\n\r\n    /**\r\n     * @ORM\\Column(type=\"string\", length=16)\r\n     */\r\n    private $tutorPhoneNumber;\r\n\r\n    /**\r\n     * @ORM\\Column(type=\"string\", length=64)\r\n     */\r\n    private $tutorEmail;\r\n\r\n    public function getId(): ?int\r\n    {\r\n        return $this->id;\r\n    }\r\n\r\n    public function getSocialReason(): ?string\r\n    {\r\n        return $this->socialReason;\r\n    }\r\n\r\n    public function setSocialReason(string $socialReason): self\r\n    {\r\n        $this->socialReason = $socialReason;\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function getSiretNumber(): ?string\r\n    {\r\n        return $this->siretNumber;\r\n    }\r\n\r\n    public function setSiretNumber(string $siretNumber): self\r\n    {\r\n        $this->siretNumber = $siretNumber;\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function getActivity(): ?string\r\n    {\r\n        return $this->activity;\r\n    }\r\n\r\n    public function setActivity(string $activity): self\r\n    {\r\n        $this->activity = $activity;\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function getLocationStreet(): ?string\r\n    {\r\n        return $this->locationStreet;\r\n    }\r\n\r\n    public function setLocationStreet(string $locationStreet): self\r\n    {\r\n        $this->locationStreet = $locationStreet;\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function getLocationCity(): ?string\r\n    {\r\n        return $this->locationCity;\r\n    }\r\n\r\n    public function setLocationCity(string $locationCity): self\r\n    {\r\n        $this->locationCity = $locationCity;\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function getPostalCode(): ?string\r\n    {\r\n        return $this->postalCode;\r\n    }\r\n\r\n    public function setPostalCode(string $postalCode): self\r\n    {\r\n        $this->postalCode = $postalCode;\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function getPhoneNumber(): ?string\r\n    {\r\n        return $this->phoneNumber;\r\n    }\r\n\r\n    public function setPhoneNumber(string $phoneNumber): self\r\n    {\r\n        $this->phoneNumber = $phoneNumber;\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function getContractEmail(): ?string\r\n    {\r\n        return $this->contractEmail;\r\n    }\r\n\r\n    public function setContractEmail(?string $contractEmail): self\r\n    {\r\n        $this->contractEmail = $contractEmail;\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function getRepresentativeCivility(): ?bool\r\n    {\r\n        return $this->representativeCivility;\r\n    }\r\n\r\n    public function setRepresentativeCivility(bool $representativeCivility): self\r\n    {\r\n        $this->representativeCivility = $representativeCivility;\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function getRepresentativeFirstName(): ?string\r\n    {\r\n        return $this->representativeFirstName;\r\n    }\r\n\r\n    public function setRepresentativeFirstName(string $representativeFirstName): self\r\n    {\r\n        $this->representativeFirstName = $representativeFirstName;\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function getRepresentativeLastName(): ?string\r\n    {\r\n        return $this->representativeLastName;\r\n    }\r\n\r\n    public function setRepresentativeLastName(string $representativeLastName): self\r\n    {\r\n        $this->representativeLastName = $representativeLastName;\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function getRepresentativeRole(): ?string\r\n    {\r\n        return $this->representativeRole;\r\n    }\r\n\r\n    public function setRepresentativeRole(string $representativeRole): self\r\n    {\r\n        $this->representativeRole = $representativeRole;\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function getRepresentativeEmail(): ?string\r\n    {\r\n        return $this->representativeEmail;\r\n    }\r\n\r\n    public function setRepresentativeEmail(string $representativeEmail): self\r\n    {\r\n        $this->representativeEmail = $representativeEmail;\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function getOtherSocialReason(): ?string\r\n    {\r\n        return $this->otherSocialReason;\r\n    }\r\n\r\n    public function setOtherSocialReason(?string $otherSocialReason): self\r\n    {\r\n        $this->otherSocialReason = $otherSocialReason;\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function getOtherLocationStreet(): ?string\r\n    {\r\n        return $this->otherLocationStreet;\r\n    }\r\n\r\n    public function setOtherLocationStreet(?string $otherLocationStreet): self\r\n    {\r\n        $this->otherLocationStreet = $otherLocationStreet;\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function getOtherLocationCity(): ?string\r\n    {\r\n        return $this->otherLocationCity;\r\n    }\r\n\r\n    public function setOtherLocationCity(?string $otherLocationCity): self\r\n    {\r\n        $this->otherLocationCity = $otherLocationCity;\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function getOtherPostalCode(): ?string\r\n    {\r\n        return $this->otherPostalCode;\r\n    }\r\n\r\n    public function setOtherPostalCode(?string $otherPostalCode): self\r\n    {\r\n        $this->otherPostalCode = $otherPostalCode;\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function getOtherPhoneNumber(): ?string\r\n    {\r\n        return $this->otherPhoneNumber;\r\n    }\r\n\r\n    public function setOtherPhoneNumber(?string $otherPhoneNumber): self\r\n    {\r\n        $this->otherPhoneNumber = $otherPhoneNumber;\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function getWorkerRole(): ?string\r\n    {\r\n        return $this->workerRole;\r\n    }\r\n\r\n    public function setWorkerRole(string $workerRole): self\r\n    {\r\n        $this->workerRole = $workerRole;\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function getContractType(): ?string\r\n    {\r\n        return $this->contractType;\r\n    }\r\n\r\n    public function setContractType(string $contractType): self\r\n    {\r\n        $this->contractType = $contractType;\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function getContractStartDate(): ?\\DateTimeInterface\r\n    {\r\n        return $this->contractStartDate;\r\n    }\r\n\r\n    public function setContractStartDate(\\DateTimeInterface $contractStartDate): self\r\n    {\r\n        $this->contractStartDate = $contractStartDate;\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function getContractEndDate(): ?\\DateTimeInterface\r\n    {\r\n        return $this->contractEndDate;\r\n    }\r\n\r\n    public function setContractEndDate(\\DateTimeInterface $contractEndDate): self\r\n    {\r\n        $this->contractEndDate = $contractEndDate;\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function getTutorCivility(): ?bool\r\n    {\r\n        return $this->tutorCivility;\r\n    }\r\n\r\n    public function setTutorCivility(bool $tutorCivility): self\r\n    {\r\n        $this->tutorCivility = $tutorCivility;\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function getTutorFirstName(): ?string\r\n    {\r\n        return $this->tutorFirstName;\r\n    }\r\n\r\n    public function setTutorFirstName(string $tutorFirstName): self\r\n    {\r\n        $this->tutorFirstName = $tutorFirstName;\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function getTutorLastName(): ?string\r\n    {\r\n        return $this->tutorLastName;\r\n    }\r\n\r\n    public function setTutorLastName(string $tutorLastName): self\r\n    {\r\n        $this->tutorLastName = $tutorLastName;\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function getTutorRole(): ?string\r\n    {\r\n        return $this->tutorRole;\r\n    }\r\n\r\n    public function setTutorRole(string $tutorRole): self\r\n    {\r\n        $this->tutorRole = $tutorRole;\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function getTutorPhoneNumber(): ?string\r\n    {\r\n        return $this->tutorPhoneNumber;\r\n    }\r\n\r\n    public function setTutorPhoneNumber(string $tutorPhoneNumber): self\r\n    {\r\n        $this->tutorPhoneNumber = $tutorPhoneNumber;\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function getTutorEmail(): ?string\r\n    {\r\n        return $this->tutorEmail;\r\n    }\r\n\r\n    public function setTutorEmail(string $tutorEmail): self\r\n    {\r\n        $this->tutorEmail = $tutorEmail;\r\n\r\n        return $this;\r\n    }\r\n\r\n    /**\r\n     * @return mixed\r\n     */\r\n    public function getUser()\r\n    {\r\n        return $this->user;\r\n    }\r\n\r\n    /**\r\n     * @param mixed $user\r\n     */\r\n    public function setUser($user): void\r\n    {\r\n        $this->user = $user;\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Entity/Contract.php	(revision e48948b648fa668e19e303e68c02b55c6797424c)
+++ src/Entity/Contract.php	(date 1610447540276)
@@ -23,6 +23,8 @@
      */
     private $user;
 
+
+
     /**
      * @ORM\Column(type="string", length=64)
      */
